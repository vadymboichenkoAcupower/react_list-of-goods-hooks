{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","SORT_DEFAULT","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","prepareGoods","sort","good1","good2","BY_ALPHABET","localeCompare","BY_LENGTH","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,uBAAAA,E,mBAAAA,E,iBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,cAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAOMC,EApCR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAY,YAAOD,GAmBzB,OAjBIL,GACFM,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQT,GACN,KAAKL,EAASe,YACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKd,EAASiB,UACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKXX,GACFI,EAAaQ,UAGRR,EAaHS,CAAiBnB,EAAiBI,EAAWE,GAEjD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBACZ,CAAE,aAAclB,IAAcL,EAASe,eACzCS,QAAS,kBAAMlB,EAAaN,EAASe,cAJvC,iCASA,wBACEO,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,aAAclB,IAAcL,EAASiB,aACzCO,QAAS,kBAAMlB,EAAaN,EAASiB,YAJvC,4BASA,wBACEK,KAAK,SACLD,UACEE,IAAG,oBAAqB,CACtB,YAAahB,IAGjBiB,QAAS,kBAAMhB,GAAeD,IAPhC,qBAYCF,GAAaE,EACZ,wBACEe,KAAK,SACLD,UAAU,4BACVG,QA7CW,WACnBlB,EAAaN,EAASI,cACtBI,GAAc,IAwCR,mBAOE,MAIN,6BACGC,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC3GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e4623491.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  BY_ALPHABET = 'alphabet',\n  BY_LENGTH = 'length',\n  SORT_DEFAULT = '',\n}\n\nfunction getPreparedGoods(\n  goods : string[],\n  sortField: SortType,\n  isReversed: boolean,\n) {\n  const prepareGoods = [...goods];\n\n  if (sortField) {\n    prepareGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.BY_ALPHABET:\n          return good1.localeCompare(good2);\n        case SortType.BY_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    prepareGoods.reverse();\n  }\n\n  return prepareGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.SORT_DEFAULT);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const setToDefault = () => {\n    setSortField(SortType.SORT_DEFAULT);\n    setIsReversed(false);\n  };\n\n  const visibleGoods\n    = getPreparedGoods(goodsFromServer, sortField, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': !(sortField === SortType.BY_ALPHABET) })}\n          onClick={() => setSortField(SortType.BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': !(sortField === SortType.BY_LENGTH) })}\n          onClick={() => setSortField(SortType.BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-warning', {\n              'is-light': !isReversed,\n            })\n          }\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {sortField || isReversed ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={setToDefault}\n          >\n            Reset\n          </button>\n        ) : ''}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}